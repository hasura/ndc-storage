version: "2"

linters:
  default: all
  disable:
    - err113
    - lll
    - gomoddirectives
    - depguard
    - wrapcheck
    - varnamelen
    - exhaustive
    - exhaustruct
    - ireturn
    - gochecknoglobals
    - nilnil
    - mnd
    - tagliatelle
    - recvcheck
    - funcorder
    - tagalign

  settings:
    nestif:
      # Minimal complexity of if statements to report.
      # Default: 5
      min-complexity: 15

    gocritic:
      disabled-checks:
        - appendAssign
    gocyclo:
      min-complexity: 40

    cyclop:
      max-complexity: 40

    revive:
      # Maximum number of open files at the same time.
      max-open-files: 2048
      severity: error
      rules:
        - name: var-naming
          disabled: true
        - name: exported
          disabled: true
          
    gosec:
      excludes:
        - G115
        - G301
        - G304
        - G306
        - G404
        
    funlen:
      lines: 200
      statements: 90

    gocognit:
      min-complexity: 60

  # Defines a set of rules to ignore issues.
  # It does not skip the analysis, and so does not ignore "typecheck" errors.
  exclusions:
    # Mode of the generated files analysis.
    #
    # - `strict`: sources are excluded by strictly following the Go generated file convention.
    #    Source files that have lines matching only the following regular expression will be excluded: `^// Code generated .* DO NOT EDIT\.$`
    #    This line must appear before the first non-comment, non-blank text in the file.
    #    https://go.dev/s/generatedcode
    # - `lax`: sources are excluded if they contain lines like `autogenerated file`, `code generated`, `do not edit`, etc.
    # - `disable`: disable the generated files exclusion.
    #
    # Default: lax
    generated: strict
    # Log a warning if an exclusion rule is unused.
    warn-unused: false
    rules: 
      - path: ndc-http-schema
        linters:
          - noctx
          - goconst

    # Which file paths to exclude: they will be analyzed, but issues from them won't be reported.
    # "/" will be replaced by the current OS file path separator to properly work on Windows.
    paths:
      - ".*_test\\.go$"

formatters:
  # Enable specific formatter.
  # Default: [] (uses standard Go formatting)
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
    - golines
  # Formatters settings.
  settings: {}
  exclusions:
    # Mode of the generated files analysis.
    #
    # - `strict`: sources are excluded by strictly following the Go generated file convention.
    #    Source files that have lines matching only the following regular expression will be excluded: `^// Code generated .* DO NOT EDIT\.$`
    #    This line must appear before the first non-comment, non-blank text in the file.
    #    https://go.dev/s/generatedcode
    # - `lax`: sources are excluded if they contain lines like `autogenerated file`, `code generated`, `do not edit`, etc.
    # - `disable`: disable the generated files exclusion.
    #
    # Default: lax
    generated: strict
    # Which file paths to exclude.
    # Default: []
    paths: []